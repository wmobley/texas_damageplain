{"version":3,"sources":["Components/Navbars/AppBar.js","Components/Navbars/NavBar.js","Components/Maps/OL/Map/MapContext.js","Components/Maps/OL/Map/Map.js","Components/Maps/OL/Layers/Layers.js","Components/Maps/OL/Layers/TileLayer.js","Components/Maps/OL/Source/xyz.js","Components/Maps/OL/Source/osm.js","Components/Maps/OL/Controls/Controls.js","Components/Maps/OL/Controls/FullScreenControl.js","Components/Maps/OL/Layers/OLwmts.js","Components/Maps/Legend.js","Components/Maps/OL/Layers/MVT.js","Components/Maps/OlMap.js","Components/Dropdowns/boundryDropdown.js","views/Hazard.js","reportWebVitals.js","index.js"],"names":["AppBar","props","react_default","a","createElement","Box","Object","assign","tag","direction","align","justify","pad","left","right","vertical","elevation","style","zIndex","NavBar","_Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","colors","theme","global","inherits","createClass","key","value","_this2","showSidebar","size","Layer","background","snow","width","border","id","overflow","Button","icon","FormClose","onClick","action","fill","Text","children","Collapsible","open","Component","MapContext","React","createContext","Map","_ref","parentProps","changeMap","mapRef","useRef","_useState","useState","_useState2","slicedToArray","map","setMap","useEffect","options","target","view","ol","zoom","center","layers","controls","overlays","mapObject","setTarget","current","selected","setTimeout","updateSize","on","console","log","values_","e","dragging","pixel_url","getLayers","getArray","source","getFeatureInfoUrl","coordinate","INFO_FORMAT","STYLES","axios","get","then","response","layer","index","returnValue","data","features","properties","query_column","legend","document","getElementById","i","length","classList","replace","innerHTML","undefined","getView","setZoom","setCenter","Map_MapContext","Provider","ref","className","Layers","TileLayer","_ref$zIndex","useContext","tileLayer","OLTileLayer","addLayer","setZIndex","removeLayer","xyz","osm","olSource","Controls","FullScreenControl","fullScreenControl","FullScreen","push","remove","OLwmts","_ref$opacity","opacity","TileWMS","url","params","LAYERS","TILED","tiled","serverType","transition","setOpacity","Legend","state","parentState","IncreaseElement","add","_step","items","_iterator","_createForOfIteratorHelper","entries","s","n","done","_ref2","color","err","f","Footer","margin","MVTLayer","addBoundary","selected_boundaries","selection","forEach","boundary","name","boundaryStyle","Style","stroke","Stroke","slate","Fill","sage","selectedBoundary","whoop","vectorLayer","VectorTileLayer","declutter","VectorTileSource","format","MVT","tilePixelRatio","tileGrid","tilegrid","maxZoom","tileSize","defaultDataProjection","crossOrigin","selectionLayer","renderMode","getSource","feature","includes","properties_","event","getFeatures","pixel","changed","OlMap","_React$Component","list_vector_titles","bind","assertThisInitialized","setShowLayer2","setShowLayer1","setRefreshMap","createRef","showLayer1","showLayer2","refreshMap","setState","tiles","vectors","OlMap_createForOfIteratorHelper","element","Layers_MVT","vector_layer","styles","OL_Map_Map","OL_Layers_Layers","Layers_TileLayer","Layers_OLwmts","rasterOpacity","boundary_array","OL_Controls_Controls","Controls_FullScreenControl","basis","Maps_Legend","BoundaryDropdown","OPTIONS","_this$state","Select","multiple","onChange","changeBoundary","Hazard","z","query","queryString","dictionary","indexOf","exists","parts","substr","split","keyValuePair","decodeURIComponent","parseQueryStringToDictionary","location","search","centroid","removeFromList","setSideBarState","download","getLayerNames","setRasterOpacity","showMapNavigation","damageMapUrl","fromLonLat","file_name","huc12_boundary","LatLng","onyx","secondary","rain","sunshine","ice","fossil","sand","font","family","height","tab","active","side","hover","map_values","removed","prev_file_name","newFileName","datum","boundary_index","Hazard_createForOfIteratorHelper","VectorLayers","title","rangeInput","fetch","res","blob","saveAs","l","names","Grommet","full","ResponsiveContext","Consumer","Navbars_AppBar","Apps","Image","fit","src","Heading","level","Main","flex","Navbars_NavBar","Tabs","Tab","MapLocation","gap","Download","RangeInput","min","max","boundryDropdown","label","List","Close","primary","responsive","Maps_OlMap","huc8_boundary","reportWebVitals","onPerfEntry","Function","__webpack_require__","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","ReactDOM","createRoot","render","react_router","views_Hazard"],"mappings":"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","file":"static/js/main.fbc27f5b.chunk.js","sourcesContent":["import {Box} from \"grommet\";\nimport React from \"react\";\n\nconst AppBar = (props) => (\n\n\n    <Box\n        tag='header'\n        direction='row'\n        align='center'\n        justify='between'\n        pad={{left: 'medium', right: 'small', vertical: 'small'}}\n        elevation='medium'\n        style={{zIndex: '1'}}\n        {...props}\n    />\n);\nexport default AppBar;","import {Box, Button, Collapsible, Layer, Text} from \"grommet\";\nimport {FormClose} from \"grommet-icons\";\nimport React, {Component} from \"react\";\n\n// import withRouter from \"react-router/modules/withRouter\";\nclass NavBar extends Component {\n    constructor(props) {\n        super(props);\n        this.colors = this.props.theme.global.colors\n    }\n\n    render() {\n\n        return (\n            <Box  direction=\"row-responsive\" >\n                {(!this.props.showSidebar || this.props.size !== 'small') ? (\n                    <Collapsible  direction=\"horizontal\" open={this.props.showSidebar}>\n                        {/*<Box flex fill>*/}\n                        <Box\n                            id=\"hazard\" overflow=\"scroll\"\n                            fill={'vertical'}\n                            width={this.props.width}\n\n                            border={true}\n                            background={this.colors.snow}\n                            pad=\"small\"\n                            elevation=\"small\">\n                            <Text size=\"xlarge\">\n                                {this.props.children}\n                            </Text>\n                        </Box>\n                    </Collapsible>\n                ) : (\n                    <Layer>\n                        <Box\n                            background={this.colors.snow}\n                            tag='header'\n                            width={\"max\"}\n                            // height={\"small\"}\n                            border={false}\n                            justify='end'\n                            align='right'\n                            direction='row'\n                            id=\"hazard\"\n                            overflow=\"scroll\">\n                            <Button\n                                icon={<FormClose/>}\n                                onClick={() => this.props.action()}\n                            />\n                        </Box>\n                        <Box\n                            fill\n                            background={this.colors.snow}\n                            align='center'\n                            justify='center'>\n                            <Text size=\"xlarge\">\n                                {this.props.children}\n                            </Text>\n                        </Box>\n                    </Layer>\n                )}\n            </Box>\n        )\n    }\n}\n\n\nexport default NavBar","import React from \"react\";\n\nconst MapContext = new React.createContext();\nexport default MapContext;\n","import React, {useEffect, useRef, useState} from \"react\"\nimport \"./Map.css\";\nimport MapContext from \"./MapContext\";\nimport * as ol from \"ol\";\nimport axios from \"axios\";\n\n\nconst Map = ({parentProps, changeMap, children,}) => {\n    const mapRef = useRef();\n\n    const [map, setMap] = useState(null);\n\n    // on component mount\n    useEffect(() => {\n        let options = {\n            target: 'map',\n            view: new ol.View({zoom: parentProps.zoom, center: parentProps.center}),\n            layers: [],\n            controls: [],\n            overlays: []\n        };\n\n        let mapObject = new ol.Map(options);\n        mapObject.setTarget(mapRef.current);\n        setMap(mapObject);\n        // var status = document.getElementById('status');\n        let selected = null;\n        if (mapObject != null) {\n            setTimeout(() => {\n                mapObject.updateSize();\n            }, 300);\n\n\n        }\n        mapObject.on('moveend', () => {\n            console.log()\n            changeMap(mapObject.values_.view.values_)\n        })\n        mapObject.on('click', function (e) {\n\n            if (e.dragging) {\n                return;\n            }\n\n            if (selected !== null) {\n\n                selected = null;\n            }\n            let layer = mapObject.getLayers().getArray()\n\n            // var viewResolution = /** @type {number} */ (mapObject.values_.view.getResolution());\n            const pixel_url = layer[1].values_.source.getFeatureInfoUrl(e.coordinate,\n                10,\n                'EPSG:3857',\n                {'INFO_FORMAT': 'application/json',\n                'STYLES':''})\n\n            axios.get(pixel_url).then(response => {\n                let layer = parentProps.layers[parentProps.index]\n                const returnValue = response.data.features[0].properties[layer.query_column];\n                let legend = document.getElementById(\"Legend\").children;\n                for (let i = 0; i < legend.length; i++) {\n                    if (returnValue>=layer.legend[i]['value-min'] && returnValue<layer.legend[i]['value-max']){\n                        legend[i].classList.replace(\"LegendDecrease\",\"LegendIncrease\")\n                        legend[i].innerHTML = layer.legend[i]['label']\n                        legend[i].style.zIndex = 20\n                    }\n                    else {\n                        legend[i].classList.replace(\"LegendIncrease\", \"LegendDecrease\")\n                        legend[i].innerHTML = \"\"\n                        legend[i].style.zIndex = 19\n                    }\n                }\n            })\n        });\n\n        return () => mapObject.setTarget(undefined);\n\n    }, [parentProps, changeMap, children,]);\n\n\n    // zoom change handler\n    useEffect(() => {\n        if (!map) return;\n\n        map.getView().setZoom(parentProps.zoom);\n    }, [map, parentProps]);\n\n    // center change handler\n    useEffect(() => {\n        if (!map) return;\n\n        map.getView().setCenter(parentProps.center)\n    }, [map, parentProps])\n\n\n    // get hover effect\n\n    return (\n        <MapContext.Provider value={{map}}>\n            <div id={\"map\"} ref={mapRef} className=\"ol-map\">\n                {children}\n            </div>\n        </MapContext.Provider>\n    )\n}\n\nexport default Map;","import React from \"react\";\n\nconst Layers = ({ children }) => {\n\treturn <div>{children}</div>;\n};\n\nexport default Layers;","import {useContext, useEffect} from \"react\";\nimport MapContext from \"../Map/MapContext\";\nimport OLTileLayer from \"ol/layer/Tile\";\n\nconst TileLayer = ({ source, zIndex = 0 }) => {\n\tconst { map } = useContext(MapContext);\n\n\tuseEffect(() => {\n\t\tif (!map) return;\n\n\t\tlet tileLayer = new OLTileLayer({\n\t\t\tsource,\n\t\t\tzIndex,\n\t\t});\n\t\tmap.addLayer(tileLayer);\n\t\ttileLayer.setZIndex(zIndex);\n\n\t\treturn () => {\n\t\t\tif (map) {\n\t\t\t\tmap.removeLayer(tileLayer);\n\t\t\t}\n\t\t};\n\t}, [source, zIndex, map]);\n\n\treturn null;\n};\n\nexport default TileLayer;\n","import * as olSource from \"ol/source\";\n\nfunction xyz({ url, attributions, maxZoom }) {\n\treturn new olSource.XYZ({ url, attributions, maxZoom });\n}\n\nexport default xyz;\n","import * as olSource from \"ol/source\";\n\nfunction osm() {\n\treturn new olSource.OSM();\n}\n\nexport default osm;","import React from \"react\";\n\nconst Controls = ({ children }) => {\n\treturn <div>{children}</div>;\n};\n\nexport default Controls;\n","import  {useContext, useEffect} from \"react\";\nimport {FullScreen} from \"ol/control\";\nimport MapContext from \"../Map/MapContext\";\n\nconst FullScreenControl = () => {\n\tconst { map } = useContext(MapContext);\n\n\tuseEffect(() => {\n\t\tif (!map) return;\n\n\t\tlet fullScreenControl = new FullScreen({});\n\n\t\tmap.controls.push(fullScreenControl);\n\n\t\treturn () => map.controls.remove(fullScreenControl);\n\t}, [map]);\n\n\treturn null;\n};\n\nexport default FullScreenControl;","import {useContext, useEffect} from \"react\";\nimport MapContext from \"../Map/MapContext\";\n\nimport TileLayer from 'ol/layer/Tile';\nimport TileWMS from 'ol/source/TileWMS';\n\n\nconst OLwmts = ({ layer, zIndex = 0, opacity = 1 }) => {\n\n\tconst { map } = useContext(MapContext);\n\n\tuseEffect(() => {\n\t\tif (!map) return;\n\n\t\tlet tileLayer = new TileLayer({\n\n\t\t\tsource: new TileWMS({\n\t\t\t\turl: layer.url,\n\t\t\t\tparams: {'LAYERS': layer.layer, 'TILED': layer.tiled},\n\t\t\t\tserverType: 'geoserver',\n\t\t\t\ttransition: 0,\n\n\t\t\t}),\n\t\t})\n\n\n\t\tmap.addLayer(tileLayer);\n\t\ttileLayer.setZIndex(zIndex);\n\t\ttileLayer.setOpacity(opacity);\n\n\t\treturn () => {\n\t\t\tif (map) {\n\t\t\t\tmap.removeLayer(tileLayer);\n\t\t\t}\n\t\t};\n\t}, [layer, zIndex, map, opacity]);\n\n\treturn null;\n};\n\nexport default OLwmts;\n","// noinspection HtmlUnknownTarget\n\nimport \"./esri-leaflet-geocoder.css\";\nimport {Box, Footer} from \"grommet\";\nimport React, {Component} from \"react\";\n\nclass Legend extends Component {\n    constructor(props) {\n      super(props)\n    this.state={\n        }\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    componentDidMount() {\n        // get color depending on population density value\n        let legend = document.getElementById(\"Legend\").children;\n        for (let i = 0; i < legend.length; i++) {\n            if (i===this.props.parentState.IncreaseElement){\n                legend[i].classList.add(\"LegendIncrease\")\n            }\n            else{\n                legend[i].classList.add(\"LegendDecrease\")\n            }\n        }\n    }\n\n    render(){\n        const items = []\n        for (const [index, value] of this.props.parentState.layer[0].legend.entries()) {\n            items.push(\n                <Box align={\"center\"} key={index} fill={\"vertical\"} pad={\"small\"} width={\"small\"}\n                     background={{\"color\": value.color}}/>\n            )\n        }\n        return (\n        <Footer margin={'medium'} background=\"secondary\" >\n            <Box  direction=\"row\" >\n                <Box id={\"status\"}></Box>\n                <Box fill={\"vertical\"} pad={\"xsmall\"} width={\"medium\"} />\n                <Box id=\"Legend\" direction=\"row\" >\n                    {items}\n                </Box>\n            </Box>\n        </Footer>\n        )}\n}\nexport default Legend;\n","import {useContext, useEffect} from \"react\";\nimport MapContext from \"../Map/MapContext\";\nimport 'ol/ol.css';\nimport MVT from 'ol/format/MVT.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource from 'ol/source/VectorTile.js';\nimport * as tilegrid from \"ol/tilegrid\";\nimport {Fill, Stroke, Style} from \"ol/style\";\n\n\nconst MVTLayer = ({source, zIndex = 0, style, index, addBoundary, selected_boundaries}) => {\n\tconst {map} = useContext(MapContext);\n\n\n\tuseEffect(() => {\n\n\t\tconst selection = []\n\t\tselected_boundaries.forEach(boundary => selection.push(boundary.name))\n\t\tif (!map) return;\n\t\tconst boundaryStyle = new Style({\n\t\t\tstroke: new Stroke({\n\t\t\t\tcolor: style.global.colors.slate,\n\t\t\t\twidth: 1,\n\t\t\t}),\n\t\t\tfill: new Fill({\n\t\t\t\tcolor: style.global.colors.sage +55,\n\n\t\t\t}),\n\t\t});\n\t\tconst selectedBoundary = new Style({\n\t\t\tstroke: new Stroke({\n\t\t\t\tcolor: style.global.colors.whoop,\n\t\t\t\twidth: 2,\n\t\t\t}),\n\t\t\tfill: new Fill({\n\t\t\t\tcolor: 'rgba(200,20,20,0.4)',\n\t\t\t}),\n\t\t});\n\t\tlet vectorLayer = new VectorTileLayer({\n\t\t\t\tdeclutter: true,\n\t\t\t\tsource: new VectorTileSource({\n\t\t\t\t\tformat: new MVT(),\n\t\t\t\t\ttilePixelRatio: 1, // oversampling when > 1\n\t\t\t\t\ttileGrid: tilegrid.createXYZ({maxZoom: 19}),\n\t\t\t\t\ttileSize: 512,\n\t\t\t\t\turl: source.url,\n\t\t\t\t\tdefaultDataProjection: 'EPSG:900913',\n\t\t\t\t\tcrossOrigin: 'anonymous'\n\t\t\t\t}),\n\t\t\t\tstyle: boundaryStyle\n\t\t\t});\n\n\t\tconst selectionLayer = new VectorTileLayer({\n\t\t\tmap: map,\n\t\t\trenderMode: 'vector',\n\t\t\tsource: vectorLayer.getSource(),\n\n\t\t\tstyle: function (feature) {\n\t\t\t\tif (selection.includes(feature.properties_.name)) {\n\t\t\t\t\treturn selectedBoundary;\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tmap.addLayer(vectorLayer);\n\t\tvectorLayer.setZIndex(zIndex);\n\t\tmap.on(['click'], function (event) {\n\t\t\tvectorLayer.getFeatures(event.pixel).then(function (features) {\n\t\t\t\tif (!features.length) {\n\t\t\t\t\tselectionLayer.changed();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst feature = features[0];\n\t\t\t\tif (!feature) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\taddBoundary(feature.properties_.name, feature.properties_.url, map.getView().values_)\n\t\t\t\tselectionLayer.changed();\n\t\t\t})\n\t\t})\n\t\treturn () => {\n\t\t\tif (map) {\n\t\t\t\tmap.removeLayer(vectorLayer);\n\t\t\t}\n\t\t};\n\t}, [source,addBoundary,style,  zIndex, map,selected_boundaries]);\n\n\n\treturn null;\n};\n\nexport default MVTLayer;","import React from 'react';\nimport Map from \"./OL/Map\";\nimport {Layers, TileLayer} from \"./OL/Layers\"\nimport {osm} from \"./OL/Source\"\n\nimport {Controls, FullScreenControl} from \"./OL/Controls\";\nimport OLwmts from \"./OL/Layers/OLwmts\";\nimport Legend from \"./Legend\";\nimport MVTLayer from \"./OL/Layers/MVT\";\nimport {Box} from \"grommet\";\n\n\nclass OlMap extends React.Component {\n    constructor(props) {\n        super(props);\n        this.list_vector_titles = this.list_vector_titles.bind(this)\n        this.setShowLayer2 = this.setShowLayer2.bind(this)\n        this.setShowLayer1 = this.setShowLayer1.bind(this)\n        this.setRefreshMap = this.setRefreshMap.bind(this)\n        this.mapRef = React.createRef()\n\n        this.state = {\n\n            center: this.props.parentState.center,\n            zoom: this.props.parentState.zoom,\n            showLayer1: true,\n            showLayer2: true,\n            refreshMap: false,\n\n        }\n\n\n    }\n\n    componentDidMount() {\n    }\n\n    setRefreshMap() {\n        this.setState({refreshMap: !this.state.refreshMap})\n    }\n\n\n    setShowLayer2() {\n        this.setState({showLayer2: !this.state.showLayer2})\n    }\n\n    setShowLayer1() {\n        this.setState({showLayer1: !this.state.showLayer1})\n    }\n\n    list_vector_titles(tiles) {\n        let vectors = [];\n        for (const [index, element] of tiles) {\n\n            vectors.push((element) &&\n                (<MVTLayer\n                    key={index}\n                    source={this.props.vector_layer[index]}\n                    zIndex={2}\n\n                    addBoundary={this.props.addBoundary}\n                    style={this.props.styles}\n                    selected_boundaries={this.props.selected_boundaries}/>))\n        }\n\n        return <div>{vectors}</div>;\n    }\n\n    render() {\n\n\n        return (\n            <Box fill={true}>\n                <Map parentProps={this.props.parentState} changeMap={this.props.changeMap}>\n                    <Layers>\n                        <TileLayer\n                            source={osm()}\n                            zIndex={0}/>\n                        <OLwmts\n                            layer={this.props.layer[0]}\n                            opacity = {this.props.parentState.rasterOpacity}\n                            zIndex={1}/>\n                        {\n                            this.list_vector_titles(this.props.parentState.boundary_array.entries())\n                        }\n\n\n                    </Layers>\n                    <Controls>\n                        <FullScreenControl/>\n\n                    </Controls>\n                </Map>\n                <Box elevation={\"medium\"} basis={\"medium\"} className={\"legend\"}>\n                    <Legend parentState={this.props}></Legend>\n                </Box>\n            </Box>\n        );\n    }\n\n}\n\nexport default OlMap;","import React, {Component} from 'react';\nimport {Select} from 'grommet';\n\n\nclass BoundaryDropdown extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {value: [], options: this.props.OPTIONS}\n    }\n\n\n    render() {\n        const { options, value } = this.state;\n        return (\n                <Select\n                    multiple={false}\n                    value={value}\n                    onChange={event => {\n                        this.setState({\n                            value: event.value,\n                            options: this.props.OPTIONS,\n                        })\n                        this.props.changeBoundary(event.value)\n                    }\n                    }\n                    options={options}\n                />\n        );\n    }\n}\nexport default BoundaryDropdown;","import {Box, Button, Grommet, Heading, Image, List, Main, RangeInput, ResponsiveContext, Tab, Tabs, Text} from 'grommet';\n\nimport {Apps, Close, Download, MapLocation} from 'grommet-icons';\nimport React, {Component} from \"react\";\nimport AppBar from \"../Components/Navbars/AppBar\";\nimport NavBar from \"../Components/Navbars/NavBar\";\nimport VectorLayers from \"../Data/MVTs.json\"\nimport Layers from \"../Data/data.json\"\nimport OlMap from \"../Components/Maps/OlMap\";\nimport BoundryDropdown from \"../Components/Dropdowns/boundryDropdown\";\nimport {saveAs} from 'file-saver';\nimport {fromLonLat} from \"ol/proj\";\n\n\nfunction parseQueryStringToDictionary(queryString) {\n    const dictionary = {};\n\n    // remove the '?' from the beginning of the\n    // if it exists\n    if (queryString.indexOf('?') === 0) {\n        queryString = queryString.substr(1);\n    } else {\n        return {exists: false}\n    }\n\n    // Step 1: separate out each key/value pair\n    const parts = queryString.split('&');\n\n    for (let i = 0; i < parts.length; i++) {\n        const p = parts[i];\n        // Step 2: Split Key/Value pair\n        const keyValuePair = p.split('=');\n\n        // Step 3: Add Key/Value pair to Dictionary object\n        const key = keyValuePair[0];\n        let value = keyValuePair[1];\n\n        // decode URI encoded string\n        value = decodeURIComponent(value);\n        value = value.replace(/\\+/g, ' ');\n        dictionary[key] = value;\n    }\n    dictionary.exists = true\n    // Step 4: Return Dictionary Object\n    return dictionary;\n}\n\n\nclass Hazard extends Component {\n    constructor(props) {\n        super(props);\n        let z = 4;\n        this.query = parseQueryStringToDictionary(this.props.location.search)\n        if (this.query.exists) {\n            console.log(\"exists\")\n            this.query.centroid = this.query.centroid.split(\",\")\n        } else {\n            this.query.centroid = [-97.7410, 30.2748]\n            z = 6;\n        }\n        this.changeBoundary  = this.changeBoundary.bind(this)\n        this.removeFromList = this.removeFromList.bind(this)\n        this.setSideBarState = this.setSideBarState.bind(this)\n        this.download = this.download.bind(this)\n        this.getLayerNames = this.getLayerNames.bind(this)\n        this.setMap = this.setMap.bind(this)\n        this.setRasterOpacity = this.setRasterOpacity.bind(this)\n        this.addBoundary = this.addBoundary.bind(this)\n        this.state = {\n            showSidebar: false,\n            showMapNavigation: false,\n            damageMapUrl: \"\",\n            layers: Layers,   \n            rasterOpacity: 1,\n            index: 0,\n            zoom: z,\n            center: fromLonLat(this.query.centroid),\n            file_name: [],\n            boundary_array: [false, false, false, false],\n            huc12_boundary: false,\n        };\n\n        //References\n        this.map = React.createRef();\n\n        //Legend Props\n        // this.grades = [0, 1, 2, 3];\n        this.colors = [\n            \"#00204C\",\n            \"#273F6C\",\n            \"#BBAD6F\",\n            \"#FFE945\",]\n\n        // this.years = [\n        //     \"10-Year\",\n        //     \"100-Year\",\n        //     \"250-Year\",\n        //     '500-Year']\n        // this.width = this.props.width;\n        // this.height = this.props.height;\n        this.LatLng = [30.3000, -95.5000]\n\n        //UI Props\n        this.theme = {\n            global: {\n                colors: {\n                    onyx: \"#1b1c20\",\n                    secondary: '#500000',\n                    rain: '#324755',\n                    slate: '#6E8CA0',\n                    sage: \"#87BCBF\",\n                    snow: 'rgb(200, 209, 211)',\n                    sunshine: \"#FCC931\",\n                    ice: \"#F0F3F4\",\n                    fossil: \"#C8d1d3\",\n                    sand: \"#b9b0A2\"\n                },\n                font: {\n                    family: 'Open Sans',\n                    size: '18px',\n                    height: '20px',\n                },\n            },\n            tab: {\n                active: {\n                    background: 'snow',\n                    color: 'rain',\n                },\n                background: 'snow',\n                color: 'sage',\n                border: {\n                    side: 'bottom',\n                    color: 'sage',\n                    active: {\n                        color: 'rain',\n                    },\n                    hover: {\n                        color: 'control',\n                    },\n                },\n            }\n        };\n    };\n\n    addBoundary(name, url, map_values) {\n        // Adds clicked boundary name to download list, updates zoom, and center location to state.\n        let removed = this.removeFromList(name)\n\n        let prev_file_name = this.state.file_name\n        if (!removed) prev_file_name.push({name: name, url: url})\n\n        this.setState({\n            file_name: prev_file_name,\n            zoom: map_values.zoom,\n            center: map_values.center\n        })\n    }\n\n    removeFromList(name) {\n        // Removes the name from the boundary list.\n        // Returns a true or false\n        let newFileName = []\n        this.state.file_name.forEach(datum=> {\n\n            if (datum.name !== name) {\n                newFileName.push(datum)\n            }\n        });\n        let removed = newFileName.length < this.state.file_name.length\n        this.setState(() => ({\n                file_name: newFileName\n            })\n        )\n        return removed\n    }\n\n    changeBoundary(boundary_index) {\n\n        let boundary_array = this.state.boundary_array;\n\n        for (const [index, element] of boundary_array.entries()) {\n\n            boundary_array[index] = (boundary_index === VectorLayers[index].title)\n\n\n        }\n        this.setState({boundary_array: boundary_array})\n\n\n    }\n\n    setMap(map_values) {\n\n        if ((this.state.zoom !== map_values.zoom) ||\n            (this.state.center !== map_values.center)) {\n            console.log(map_values)\n            this.setState({\n                zoom: map_values.zoom,\n                center: map_values.center\n            })\n\n        }\n    }\n\n    setRasterOpacity(rangeInput) {\n\n        this.setState({\n            rasterOpacity: rangeInput/10,\n            // boundary_array: [true,false,false,false]\n        })\n\n\n        console.log(this.state.rasterOpacity)\n    }\n\n\n    setSideBarState() {\n\n        this.setState(state => ({\n                showSidebar: !state.showSidebar\n            })\n        )\n\n\n    };\n\n    showMapNavigationState() {\n        this.setState(state => ({\n                showMapNavigation: !state.showMapNavigation\n            })\n        )\n    }\n\n    componentDidMount() {\n    }\n\n    download() {\n        this.state.file_name.forEach(function (e) {\n            fetch(e.url)\n                .then(res => res.blob())\n                .then(blob => {\n                    saveAs(blob, e.name + \".tif\");\n\n                });\n        });\n        // for (const boundary of this.state.file_name) {\n        //     setTimeout(() => { downloadURI(boundary.url, boundary.name+\".tif\");},500)\n        // }\n    }\n\n    getLayerNames(l) {\n\n        let names = [];\n        l.forEach(layer => {\n            names.push(layer.title)\n        })\n\n        return names\n    }\n\n\n    render() {\n        return (\n            <Grommet elevation={\"medium\"} margin={\"small\"} theme={this.theme} full={true}>\n                <ResponsiveContext.Consumer>\n                    {size => (\n                        <Box background={'snow'}\n                             elevation={\"medium\"} margin={\"xxsmall\"} fill={true}>\n                            <Box >\n                                <AppBar margin={\"small\"} background={\"secondary\"}>\n\n                                    <Button\n                                        icon={<Apps/>}\n                                        onClick={() => this.setSideBarState()}/>\n                                    <Box  direction=\"row\" pad={'medium'} width={'medium'} height={\"xxsmall\"} align={'center'}>\n                                       <Image fit=\"contain\" src={\"/img/tdis.png\"}/>\n                                        <Heading level='3' margin='small'>Damage Plain</Heading>\n                                    </Box>\n\n\n\n                                </AppBar>\n                            </Box>\n\n                            <Main border={{color: 'secondary', size:\"large\"}} elevation={\"medium\"} margin={\"small\"}\n                                  flex direction=\"row-responsive\">\n                                <NavBar showSidebar={this.state.showSidebar}\n                                        action={this.setSideBarState}\n                                        size={size}\n                                        width={\"medium\"}\n                                        theme={this.theme}>\n                                    <Tabs margin={\"xsmall\"} flex={\"shrink\"}>\n                                        <Tab title=\"About\">\n                                            <Box fill pad=\"medium\" align=\"center\">\n                                                <MapLocation size=\"xlarge\" color={'onyx'}/>\n                                                <Heading level={3} margin={\"small\"}>The Damage Plain</Heading>\n                                                <Box gap={\"small\"} size={\"small\"}>\n                                                    <Heading level={4} margin={\"none\"} color={\"slate\"}> About: Estimating\n                                                    Community Flood Risk</Heading>\n                                                    <Text size={\"small\"}>\n                                                        From catastrophic hurricanes to impassable roads, flooding\n                                                        causes major issues across Texas. Typically,\n                                                        coastal regions garner the most attention, but even drier\n                                                        regions regularly flood. Producing a traditional flood model is\n                                                        expensive, both in time and money, but machine learning reduces\n                                                        these barriers while providing a rapid and accurate assessment\n                                                        of flood risk.\n                                                    </Text>\n                                                    <Text size={\"small\"}>\n                                                        The Damage Plain model is a machine learning product that\n                                                        predicts the probability of flood\n                                                        loss across the state. The model uses a binary classification\n                                                        random forest to\n                                                        distinguish between confirmed flooded locations and\n                                                        structures. The random forest uses nine topographic, proximity,\n                                                        and hydrologic landscape features to predict flooded and\n                                                        non-flooded locations.\n                                                    </Text>\n                                                    <Text size={\"small\"}>\n                                                        This website provides a visual representation of the Damage\n                                                        Plain, and a way to download the dataset for any given watershed\n                                                        in the state.\n                                                    </Text>\n                                                </Box>\n                                            </Box>\n                                        </Tab>\n\n                                        <Tab title=\"Download\">\n                                            <Box fill pad=\"medium\" gap={\"medium\"} align=\"center\">\n                                                <Download size=\"xlarge\" color={'onyx'}/>\n                                                <Heading level={3} margin={\"small\"}>Download</Heading>                      \n                                                \n                                                <Text size={\"medium\"} margin={\"small\"}>Opacity of Damage Plain Layer</Text>   \n                                                <RangeInput size={\"medium\"} margin={\"small\"} \n                                                    min={0} \n                                                    max={10}\n                                                    value = {this.state.rasterOpacity * 10}\n                                                    onChange={(e)=> this.setRasterOpacity(e.target.value) } />   \n\n                                                <Text size={\"small\"} margin={\"small\"}>\n                                                    Select the Boundary type from which you want to download the file.\n                                                </Text>\n                                                <BoundryDropdown OPTIONS={this.getLayerNames(VectorLayers)}\n                                                                 changeBoundary={this.changeBoundary}/>\n                                                <Button color={\"slate\"} size={'small'} label={'Clear'}\n                                                        onClick={this.changeBoundary}/>\n                                                <Text size={\"small\"} margin={\"small\"}> Click on the location you want to\n                                                    download. </Text>\n                                                <Box height={\"small\"} size={'medium'} overflow={\"scroll\"}  >\n                                                    <List  margin={\"xxsmall\"} pad={\"xxsmall\"}\n                                                          data={this.state.file_name}>\n                                                        {(datum) =>\n                                                            <Box direction=\"row-responsive\" pad={\"small\"} align=\"center\">\n                                                                <Text> {datum.name}</Text>\n                                                                <Close align={'right'}\n                                                                       onClick={() => this.removeFromList(datum.name)}></Close>\n                                                            </Box> }\n                                                    </List>\n\n                                                </Box>\n                                                <Box fill pad=\"medium\" align=\"center\">\n                                                    <Button primary color='sage' margin={\"small\"} label={\"Download\"}\n                                                            onClick={this.download}/>\n                                                </Box>\n\n                                            </Box>\n                                        </Tab>\n                                    </Tabs>\n                                </NavBar>\n\n\n                                <Main align={\"center\"} justify={\"center\"}>\n                                    <Box direction={\"row-responsive\"}\n                                        // height={\"100%\"}\n                                         responsive={true}\n                                         fill={true}>\n                                        <OlMap LatLng={this.state.centroid}\n                                               changeMap={this.setMap}\n\n                                               parentState={this.state}\n                                               layer={this.state.layers}\n                                               vector_layer={VectorLayers}\n                                            // height=\"100%\"\n                                            // width=\"inherit\"\n                                               huc8_boundary={this.state.huc8_boundary}\n                                               huc12_boundary={this.state.huc12_boundary}\n                                               addBoundary={this.addBoundary}\n                                               selected_boundaries={this.state.file_name}\n                                               styles={this.theme}>\n\n                                        </OlMap>\n                                    </Box>\n                                </Main>\n                            </Main>\n                        </Box>\n                    )}\n                </ResponsiveContext.Consumer>\n            </Grommet>\n        )\n    }\n}\n\nexport default Hazard;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter, Redirect, Route, Router, Switch,} from \"react-router-dom\";\nimport Hazard from \"./views/Hazard\";\n\n// import \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport reportWebVitals from './reportWebVitals';\nconst rootElement = document.getElementById(\"root\")\nconst root = ReactDOM.createRoot(rootElement)\nroot.render(\n\n    <Router >\n        <Hazard/>\n    {/*    <Switch>*/}\n    {/*//         /!* add routes with layouts *!/*/}\n    {/*//         /!*<Route path=\"/admin\" component={Admin} />*!/*/}\n    {/*//         /!*<Route path=\"/auth\" component={Auth} />*!/*/}\n    //         {/*/!* add routes without layouts *!/*/}\n    {/*//         /!*<Route path=\"/landing\" exact component={Landing} />*!/*/}\n    {/*//         /!*<Route path=\"/profile\" exact component={Profile} />*!/*/}\n    {/*        <Route path=\"${process.env.PUBLIC_URL}/\" exact component={Hazard} />*/}\n    {/*//         <Route path=\"/Tools\"  component={Hazard} />*/}\n    {/*//*/}\n    {/*//         /!*<Route path=\"/Data\" exact component={Data} />*!/*/}\n    {/*//         /!*<Route path=\"/Current\" exact component={Current} />*!/*/}\n    {/*//         /!* add redirect for first page *!/*/}\n\n    {/*    </Switch>*/}\n    </Router>,\n    //\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}